# -*- coding: utf-8 -*-
"""test_database

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11p-oue1AK38NzfCp-W5iSTv82kBgqIpB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv("/content/drive/MyDrive/Ciencia De Datos/Modulo 3 /Base de datos/Copia de test.csv")
df

# Ver las primeras filas para revisar la estructura
print(df.head())

# Verificar si hay valores nulos
print(df.isnull().sum())

# Llenar valores nulos o eliminarlos (dependiendo del contexto)
df['Open'] = df['Open'].fillna(1)  #Si una tienda está abierta por defecto
df['Promo'] = df['Promo'].fillna(0)  # Si no hay promoción, se asume 0
df['StateHoliday'] = df['StateHoliday'].fillna('0')  # Rellenar con 0 si no hay feriado estatal
df['Open'] = df['Open'].astype(int)


# Convertir la columna 'Date' a tipo datetime
df['Date'] = pd.to_datetime(df['Date'], format='%Y-%m-%d')

# Asegurarse de que las variables categóricas sean tratadas como tal
df['StateHoliday'] = df['StateHoliday'].astype('category')
df['Store'] = df['Store'].astype('category')
df['DayOfWeek'] = df['DayOfWeek'].astype('category')

# Revisión final de la base de datos
print(df.info())
print(df.describe())

print(df.isnull().sum())

tiendas_abiertas_por_dia = df.groupby('DayOfWeek')['Open'].sum()

# Crear el gráfico de barras
tiendas_abiertas_por_dia.plot(kind='bar', color='lightgreen')

# Añadir título y etiquetas
plt.title('Tiendas Abiertas por Día de la Semana')
plt.xlabel('Día de la Semana')
plt.ylabel('Cantidad de Tiendas Abiertas')

# Mostrar el gráfico
plt.tight_layout()  # Ajustar el diseño para que no se corten las etiquetas
plt.show()

promos_state_holiday = df.groupby('StateHoliday')['Promo'].sum()

# Agrupar por días festivos escolares y contar cuántas promociones están activas
promos_school_holiday = df.groupby('SchoolHoliday')['Promo'].sum()

# Crear gráfico de barras para las promociones activas durante días festivos estatales
plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
promos_state_holiday.plot(kind='bar', color='orange')
plt.title('Promociones Activas por Días Festivos Estatales')
plt.xlabel('Día Festivo Estatal (0=No, 1=Sí)')
plt.ylabel('Cantidad de Promociones Activas')

# Crear gráfico de barras para las promociones activas durante días festivos escolares
plt.subplot(1, 2, 2)
promos_school_holiday.plot(kind='bar', color='purple')
plt.title('Promociones Activas por Días Festivos Escolares')
plt.xlabel('Día Festivo Escolar (0=No, 1=Sí)')
plt.ylabel('Cantidad de Promociones Activas')

# Ajustar el diseño del gráfico para que no se sobrepongan
plt.tight_layout()
plt.show()

#Guardar el conjunto de datos modificado en un archivo CSV
df.to_csv('test_database.csv', index=False)

#Descargar el Archivo
from google.colab import files
files.download('test_database.csv')